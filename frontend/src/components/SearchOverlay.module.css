.backdrop {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.7);
  backdrop-filter: blur(4px);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  animation: fadeIn 0.2s ease-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.container {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 16px;
  animation: slideIn 0.25s ease-out;
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(-20px) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

.form {
  width: 100%;
}

.inputWrapper {
  position: relative;
  width: 500px;
  max-width: 90vw;
}

.input {
  width: 100%;
  padding: 16px 20px;
  background: rgba(17, 17, 17, 0.96);
  color: #fff;
  border: 1px solid rgba(255, 255, 255, 0.15);
  border-radius: 12px;
  font-size: 16px;
  font-weight: 400;
  outline: none;
  transition: all 0.2s ease;
  box-sizing: border-box;
}

.input::placeholder {
  color: rgba(255, 255, 255, 0.5);
}

.input:focus {
  border-color: rgba(255, 255, 255, 0.8);
  border-width: 2px;
  box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.3);
}

.input:disabled {
  opacity: 0.7;
  cursor: not-allowed;
}

.loading {
  position: relative;
}

.loading .input {
  border-color: rgba(255, 255, 255, 1);
  border-width: 2px;
  box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.3);
}

/* .spinner {
  position: absolute;
  top: 50%;
  right: 16px;
  width: 20px;
  height: 20px;
  margin-top: -10px;
  border: 2px solid rgba(255, 255, 255, 0.2);
  border-top: 2px solid rgba(255, 255, 255, 0.8);
  border-radius: 50%;
  animation: spin 0.8s linear infinite;
} */

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* SVG border animation that follows the rounded rectangle path - positioned outside */
.borderSvg {
  position: absolute;
  top: -8px;
  left: -8px;
  right: -8px;
  bottom: -8px;
  width: calc(100% + 16px);
  height: calc(100% + 16px);
  z-index: 10;
  pointer-events: none;
}

.borderPath {
  /* Using normalized pathLength=1000 from TSX */
  stroke-dasharray: 120 880; /* 120 visible, 880 gap */
  animation: borderTrace 1s linear infinite; /* 1s per loop */
  filter: drop-shadow(0 0 4px rgba(255, 255, 255, 0.5));
}

@keyframes borderTrace {
  0% {
    stroke-dashoffset: 0;
  }
  100% {
    stroke-dashoffset: 1000; /* reverse direction */
  }
}

.voiceButtons {
  display: flex;
  gap: 12px;
  align-items: center;
  justify-content: center;
}

.hint {
  color: rgba(255, 255, 255, 0.8);
  font-size: 13px;
  font-weight: 400;
  text-align: center;
}
